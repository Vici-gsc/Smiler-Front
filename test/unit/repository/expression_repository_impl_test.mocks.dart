// Mocks generated by Mockito 5.3.2 from annotations
// in smiler/test/unit/repository/expression_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smiler/data/source/api.dart' as _i3;
import 'package:smiler/data/source/model/result.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i3.Api {
  @override
  _i4.Future<_i2.Result<dynamic>> post(
    String? path, {
    Map<String, String>? headers,
    Object? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<dynamic>>);
  @override
  _i4.Future<_i2.Result<dynamic>> get(
    String? path, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {#headers: headers},
        ),
        returnValue:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<_i2.Result<dynamic>>);
  @override
  _i4.Future<_i2.Result<dynamic>> postFile(
    String? path,
    String? filePath,
    String? fileId, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postFile,
          [
            path,
            filePath,
            fileId,
          ],
          {#headers: headers},
        ),
        returnValue:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #postFile,
            [
              path,
              filePath,
              fileId,
            ],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #postFile,
            [
              path,
              filePath,
              fileId,
            ],
            {#headers: headers},
          ),
        )),
      ) as _i4.Future<_i2.Result<dynamic>>);
  @override
  _i4.Future<_i2.Result<dynamic>> request(
    _i3.HttpMethod? method,
    String? path, {
    Map<String, String>? headers,
    Object? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            method,
            path,
          ],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #request,
            [
              method,
              path,
            ],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<dynamic>>.value(_FakeResult_0<dynamic>(
          this,
          Invocation.method(
            #request,
            [
              method,
              path,
            ],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<dynamic>>);
}
